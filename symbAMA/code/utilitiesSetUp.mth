$antlrPath=
"/msu/res1/Software/mavenRepositories/tryRep/"<>
"org/antlr/antlr-runtime/3.2/antlr-runtime-3.2.jar";
$dynareParserPath="../../DynareParsers/target/classes/";
$dynareParserPath="/msu/home/m1gsa00/git/DynareParsers/target/classes/";
$symPath="../../mathAMA/SymbolicAMA/SymbolicAMA/";
$numPath="../../mathAMA/NumericAMA/NumericAMA/";
$modPath="../../mathAMA/AMAModel/";
$fmtPath="../../FormatOptimize/";
$Path = Join[$Path, {$symPath,$numPath,$modPath,$fmtPath}];
Needs["AccelerateAMA`"]

Print["utilitiesSetUp.mth: after parser stable go back to relative path"]
AddToClassPath[$antlrPath];
AddToClassPath[$dynareParserPath];


theDynareMods=FileBaseName/@
FileNames[{___~~".mod"},{"dynareExamples/uniqueExamples/"}];

isLin[modName_String]:=Not[FreeQ[allLinearMods,modName]]
isNonLin[modName_String]:=Not[FreeQ[allNonLinearMods,modName]]

makeSSValSubs[modName_String]:=makeSSValSubs[getVars[modName]]
getVars[modName_String]:=If[isLin[modName],getLinVars[modName],
If[isNonLin[modName],getNonLinVars[modName],"unknown model"]]

