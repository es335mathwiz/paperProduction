Needs["stepByStep`"]

$theModelDir="dynareExamples/uniqueExamples/";
$theLinResDir="theLinRes/";
$theModel="AssetPricingApproximation"



assetModDims=getModelDims[$theModelDir,$theModel]


assetPreEvals=preEvals[$theModelDir,$theModel,$theLinResDir];



getVars[$theModel]=assetPreEvals[[-1]];
$tConst=10;
assetSSSoln=trySolve[$theModelDir,$theModel,$theLinResDir];
getNonLinSSSoln[$theModel]=If[assetSSSoln[[-1]]==={},{},assetSSSoln[[-1,1]]];




assetCompEvals=Catch[tryCompEvals[$theModelDir,$theModel,$theLinResDir],
"after evals"];



assetFindRoot=tryFindRoot[$theModelDir,$theModel,$theLinResDir]


assetCompEvecs=(Catch[tryCompEvecs[$theModelDir,$theModel,$theLinResDir],"after evals"|"after evecs"]);


assetLinCompTimes=allLinear[$theModelDir,$theModel,$theLinResDir];

getB[$theModel]=assetCompEvecs[[-2]];
$tConst=10;
assetForMex=allNonLinear[$theModelDir,$theModel,$theLinResDir];


doMexSplice[$theModel]
mexComp[$theModel]
expHMat[$theModel]


Run["matlab -nodesktop -nodisplay -nosplash -r linExeToMat"]
{linExeTimes}=Import["linExeTimes.mat"];

(*
build steady state calculation
<<genMexCode`
doMexSSSplice[$theModel]
mexSSComp[$theModel]

*)
